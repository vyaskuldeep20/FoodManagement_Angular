{"version":3,"sources":["webpack:///src/app/task/task.module.ts","webpack:///src/app/project/project.module.ts","webpack:///src/app/project/project/project.component.ts","webpack:///src/app/project/project/project.component.html","webpack:///src/app/user/user.module.ts","webpack:///src/app/user/add-user/add-user.component.ts","webpack:///src/app/user/add-user/add-user.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/task/task-service.service.ts","webpack:///src/app/project/add-project/add-project.component.ts","webpack:///src/app/project/add-project/add-project.component.html","webpack:///src/app/task/add-task/add-task.component.ts","webpack:///src/app/task/add-task/add-task.component.html","webpack:///src/app/project/project-service.service.ts","webpack:///src/app/user/user/user.component.ts","webpack:///src/app/user/user/user.component.html","webpack:///src/app/task/task/task.component.ts","webpack:///src/app/task/task/task.component.html","webpack:///src/app/user/user-service.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/common/common-data.service.ts","webpack:///src/app/user/user.ts","webpack:///src/app/project/project.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/task/task.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["TaskModule","declarations","imports","providers","ProjectModule","exports","ProjectComponent","_projectService","router","showAddProject","showProjectList","isUpdate","projects","currentProject","getProjects","subscribe","data","navigate","isSubmit","project","queryParams","projectId","id","deleteProject","isSuccess","selector","templateUrl","styleUrls","UserModule","AddUserComponent","route","userSerive","userId","users","newUser","params","parseInt","getUsers","find","x","user","saveUser","success","CancelAddUser","HomeComponent","environment","production","TaskService","http","baseURL","httpHeader","headers","get","task","put","post","taskId","url","providedIn","AddProjectComponent","newProject","saveProject","CancelAddProject","AddTaskComponent","_commonDataService","_taskService","_userService","tasks","newTask","projectDataList","userDataList","statuses","getStatusList","getTasks","getStatuses","saveTask","CancelAddTask","ProjectService","UserComponent","showAddUser","showUserList","currentUser","deleteUser","TaskComponent","showAddTask","showTaskList","projectsList","usersList","currentTask","firstName","name","status","deleteTask","UserService","AppComponent","_router","myDate","Date","console","log","setInterval","AppModule","bootstrap","CommonDataService","baseUrl","SharingData","ProjectDataModule","UserDataModule","TaskDataModule","Statuses","AddDummyUsers","AddDummyProjects","AddDummyTasks","AddDummyStatus","length","push","userIndex","findIndex","indexOf","splice","today","dateTime","getUTCFullYear","getUTCMonth","getUTCDay","createdOn","projectIndex","taskIndex","newUser1","lastName","email","newUser2","newUser3","newUser4","newUser5","date","getFullYear","getMonth","getDate","time","getHours","getMinutes","getSeconds","newProject1","detail","newProject2","newProject3","newProject4","newProject5","newTask1","assignedToUser","newTask2","newTask3","newTask4","newTask5","User","Project","NavbarComponent","routes","path","component","children","AppRoutingModule","forRoot","LoginComponent","password","isError","e","preventDefault","AuthenticateUser","Password","error","HandleSubmit","Task","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { TaskComponent } from \"./task/task.component\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { AddTaskComponent } from \"./add-task/add-task.component\";\r\nimport { ProjectModule } from \"../project/project.module\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { CommonDataService } from \"../common/common-data.service\";\r\nimport { TaskService } from \"./task-service.service\";\r\n\r\n@NgModule({\r\n  declarations: [TaskComponent, AddTaskComponent],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    ProjectModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [TaskService],\r\n})\r\nexport class TaskModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProjectComponent } from './project/project.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AddProjectComponent } from './add-project/add-project.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ProjectService } from './project-service.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule,BrowserModule, FormsModule,HttpClientModule],\r\n  declarations: [ProjectComponent,AddProjectComponent],\r\n  exports:[ProjectComponent],\r\n  providers:[ProjectService] \r\n})\r\nexport class ProjectModule {}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Project } from \"../project\";\r\nimport { AddProjectComponent } from \"../add-project/add-project.component\";\r\nimport { CommonDataService } from \"src/app/common/common-data.service\";\r\nimport { Router } from '@angular/router';\r\nimport { ProjectService } from \"../project-service.service\";\r\n\r\n@Component({\r\n  selector: \"app-project\",\r\n  templateUrl: \"./project.component.html\",\r\n  styleUrls: [\"./project.component.css\"],\r\n})\r\nexport class ProjectComponent implements OnInit {\r\n  constructor(private _projectService: ProjectService, private router: Router) {\r\n  }\r\n\r\n  showAddProject: boolean = false;\r\n  showProjectList: boolean = true;\r\n  isUpdate: boolean = false;\r\n\r\n  projects: Array<Project> = [];\r\n  currentProject: Project = {};\r\n  ngOnInit(): void {\r\n    this.getProjects();\r\n  }\r\n\r\n  getProjects(){\r\n    this._projectService.getProjects().subscribe((data:any)=>{\r\n      this.projects=data;\r\n    });\r\n  }\r\n  OnAddProjectClick() {\r\n    this.router.navigate(['home/AddProject'])\r\n  }\r\n\r\n  \r\n\r\n \r\n\r\n  ShowProjectList(isSubmit: boolean) {\r\n    if (!isSubmit) {\r\n      this.showAddProject = false;\r\n      this.showProjectList = true;\r\n    }\r\n  }\r\n\r\n  UpdateProject(project: Project) {\r\n    this.router.navigate(['home/AddProject'],{ queryParams: { projectId: project.id } })\r\n  }\r\n  DeleteProject(project: Project) {\r\n    this._projectService.deleteProject(project.id??-1).subscribe((isSuccess)=>{\r\n      this.getProjects();\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"showProjectList\">\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" style=\"margin-top: 1%; margin-bottom: 1%\"\r\n        (click)=\"OnAddProjectClick()\">\r\n        Add Project\r\n    </button>\r\n    <div style=\"overflow: scroll; max-height: 100vh\">\r\n        <table class=\"table table-hover\">\r\n            <thead class=\"thead-dark\">\r\n                <tr style=\"text-align: center\">\r\n                    <th scope=\"col\">Id</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Details</th>\r\n                    <th scope=\"col\">CreatedOn</th>\r\n                    <th scope=\"col\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr style=\"text-align: center\" *ngFor=\"let project of projects\">\r\n                    <th scope=\"row\">{{ project.id }}</th>\r\n                    <td>{{ project.name }}</td>\r\n                    <td>{{ project.detail }}</td>\r\n                    <td>{{ project.createdOn }}</td>\r\n                    <td>\r\n                        <button type=\"button\" (click)=\"UpdateProject(project)\" style=\"margin-left: 2%\"\r\n                            class=\"btn btn-info\">\r\n                            Update\r\n                        </button>\r\n                        <button type=\"button\" (click)=\"DeleteProject(project)\" style=\"margin-left: 2%\"\r\n                            class=\"btn btn-danger\">\r\n                            Delete\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserComponent } from './user/user.component';\r\nimport { AddUserComponent } from './add-user/add-user.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { UserService } from './user-service.service';\r\n\r\n@NgModule({\r\n  declarations: [UserComponent, AddUserComponent],\r\n  imports: [CommonModule, FormsModule],\r\n  providers:[UserService]\r\n})\r\nexport class UserModule {}\r\n","import { Component, OnInit, Output, EventEmitter ,Input} from '@angular/core';\r\nimport { User } from '../user';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { UserService } from '../user-service.service';\r\n\r\n@Component({\r\n  selector: 'app-add-user',\r\n  templateUrl: './add-user.component.html',\r\n  styleUrls: ['./add-user.component.css'],\r\n})\r\nexport class AddUserComponent implements OnInit {\r\n\r\n  userId:any=null\r\n  users:User[]=[];\r\n  newUser:User =new User();\r\n isUpdate: boolean = false;\r\n\r\n  constructor(private route: ActivatedRoute,private router:Router,private userSerive: UserService) {\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(params => {\r\n      let id=params['userId'];\r\n      if(id!=null){\r\n        this.userId = parseInt(id);\r\n        this.isUpdate=true;\r\n        this.userSerive.getUsers().subscribe((data:any)=>{\r\n          this.users=data;\r\n          this.newUser=this.users.find(x=>x.id==this.userId)??new User();\r\n        })\r\n        \r\n      }\r\n      \r\n    });\r\n  }\r\n  \r\n\r\n  AddUser(user: User) {\r\n       this.userSerive.saveUser(user).subscribe((success)=>{\r\n        this.router.navigate(['home/user'])\r\n       });\r\n    \r\n  }\r\n\r\n  CancelAddUser(){\r\n    this.router.navigate(['home/user'])\r\n  }\r\n}\r\n","<form style=\"max-width: 70%; margin-left: 10%; margin-top: 1%\">\r\n<h3>Add New User</h3>\r\n    <div class=\"row\">\r\n        <div class=\"col\">\r\n            <label for=\"firstName\">FirstName</label>        \r\n            <input type=\"text\" [(ngModel)]=\"newUser.firstName\" name=\"FirstName\" class=\"form-control\"\r\n                placeholder=\"First name\" #FirstName=\"ngModel\" />\r\n            <div [hidden]=\"FirstName.valid || FirstName.pristine\" class=\"alert alert-danger\">\r\n                Name is required\r\n            </div>\r\n        </div>\r\n        <div class=\"col\">\r\n            <label for=\"lastName\">LastName</label>\r\n            <input type=\"text\" [(ngModel)]=\"newUser.lastName\" name=\"LastName\" class=\"form-control\" #LastName=\"ngModel\"\r\n                placeholder=\"Last name\" />\r\n        </div>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"exampleInputEmail1\">Email address</label>\r\n        <input type=\"email\" [(ngModel)]=\"newUser.email\" name=\"Email\" class=\"form-control\" id=\"exampleInputEmail1\"\r\n            aria-describedby=\"emailHelp\" #Email=\"ngModel\" placeholder=\"Enter email\" />\r\n        <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\r\n    </div>\r\n    <button *ngIf=\"!isUpdate\" type=\"submit\" class=\"btn btn-primary\" (click)=\"AddUser(newUser)\">\r\n        Add User\r\n    </button>\r\n    <button style=\"margin-left: 1%\" type=\"button\" (click)=\"CancelAddUser()\" class=\"btn btn-danger\">\r\n        Cancel\r\n    </button>\r\n\r\n    <button *ngIf=\"isUpdate\" style=\"margin-left: 1%\" type=\"button\" (click)=\"AddUser(newUser)\" class=\"btn btn-info\">\r\n        Save\r\n    </button>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n  \r\n}\r\n","<div style=\"display: flex;height: 100vh;\">\r\n    <div style=\"width: 15%;background-color: #343b40;\">\r\n        <app-navbar></app-navbar>\r\n    </div>\r\n    <div style=\"width: 80%;padding-left: 1%;\">\r\n        <!-- <h1 style=\"\r\n        font-size: 5rem;\r\n        text-align: center;\r\n    \">Welcome To</h1>\r\n        <h1 style=\"\r\n        font-size: 5rem;\r\n        text-align: center;\r\n    \">Project Manager</h1> -->\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Task } from './task';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskService {\r\n\r\n  baseURL=\"http://localhost:3001/tasks\"\r\n  constructor(private http:HttpClient) { }\r\n\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  } \r\n  \r\ngetTasks(){\r\n    return this.http.get(this.baseURL);\r\n  }\r\n\r\n\r\n\r\nsaveTask(task:any){\r\n  if(task.id){\r\n    return this.http.put<Task>(this.baseURL+'/'+task.id,task)\r\n  }\r\n  else{\r\n    return this.http.post<Task>(this.baseURL,task)\r\n  }          \r\n}\r\n\r\ndeleteTask(taskId:number){\r\n  let url=this.baseURL+\"/\"+taskId\r\nreturn this.http.delete(url, this.httpHeader);\r\n}\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Project } from '../project';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { CommonDataService } from 'src/app/common/common-data.service';\r\nimport { ProjectService } from '../project-service.service';\r\n\r\n@Component({\r\n  selector: 'app-add-project',\r\n  templateUrl: './add-project.component.html',\r\n  styleUrls: ['./add-project.component.css'],\r\n})\r\nexport class AddProjectComponent implements OnInit {\r\n\r\n  projectId:any=null\r\n  projects:Project[]=[];\r\n  newProject:Project =new Project();\r\n isUpdate: boolean = false;\r\n\r\n  \r\n\r\n  constructor(private route: ActivatedRoute,private router:Router,private _projectService: ProjectService) {\r\n  }\r\n\r\n  \r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(params => {\r\n      let id=params['projectId'];\r\n      if(id!=null){\r\n        this.projectId = parseInt(id);\r\n        this.isUpdate=true;\r\n        this._projectService.getProjects().subscribe((data:any)=>{\r\n          this.projects=data;\r\n          this.newProject=this.projects.find(x=>x.id==this.projectId)??new Project();\r\n        });\r\n        \r\n      }      \r\n    });\r\n  }\r\n  AddProject(project: Project) {\r\n   this._projectService.saveProject(project).subscribe((success)=>{\r\n    this.router.navigate(['home/project']);\r\n   })\r\n    \r\n  }\r\n  CancelAddProject(){\r\n    this.router.navigate(['home/project']);\r\n  }\r\n\r\n}\r\n","<form style=\"max-width: 70%; margin-left: 10%; margin-top: 1%\">\r\n    <h3>Add New Project</h3>\r\n        <div style=\"margin-bottom: 2%;\">\r\n            <div style=\"margin-bottom: 2%;\">\r\n                <label for=\"Name\">Name</label>\r\n                <input type=\"text\" [(ngModel)]=\"newProject.name\" name=\"Name\" class=\"form-control\"\r\n                    placeholder=\"Project Name\" #Name=\"ngModel\" />\r\n                <div [hidden]=\"Name.valid || Name.pristine\" class=\"alert alert-danger\">\r\n                    Name is required\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <label for=\"details\">Details</label>\r\n                <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" [(ngModel)]=\"newProject.detail\" name=\"Detail\" #Detail=\"ngModel\"\r\n                placeholder=\"Details about the project\"  rows=\"3\"></textarea>\r\n            </div>\r\n        </div>\r\n        <button *ngIf=\"!isUpdate\" type=\"submit\" class=\"btn btn-primary\" (click)=\"AddProject(newProject)\">\r\n            Add Project\r\n        </button>\r\n        <button style=\"margin-left: 1%\" type=\"button\" (click)=\"CancelAddProject()\" class=\"btn btn-danger\">\r\n            Cancel\r\n        </button>\r\n        <button *ngIf=\"isUpdate\" style=\"margin-left: 1%\" type=\"button\" (click)=\"AddProject(newProject)\" class=\"btn btn-info\">\r\n            Save\r\n        </button>\r\n</form>","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { Task } from \"../task\";\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport { CommonDataService } from 'src/app/common/common-data.service';\r\nimport { ProjectService } from \"src/app/project/project-service.service\";\r\nimport { UserService } from \"src/app/user/user-service.service\";\r\nimport { TaskService } from \"../task-service.service\";\r\n@Component({\r\n  selector: \"app-add-task\",\r\n  templateUrl: \"./add-task.component.html\",\r\n  styleUrls: [\"./add-task.component.css\"],\r\n})\r\nexport class AddTaskComponent implements OnInit {\r\n  tasks:Task[]=[];\r\n  taskId:any=null;\r\n  @Input() newTask: Task = {};\r\n  @Input() isUpdate: boolean = false;\r\n  projectDataList: Array<any> = [];\r\n  userDataList: Array<any> = [];\r\n  statuses: Array<any> = [];\r\n\r\n  constructor(private route: ActivatedRoute,private router:Router,private _commonDataService:CommonDataService,private _taskService:TaskService,private _userService:UserService,private _projectService:ProjectService) {\r\n  }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.getStatusList();\r\n  this.getUsers();\r\n  this.getProjects();\r\n  this.getTasks();\r\n    this.route.queryParams.subscribe(params => {\r\n      let id=params['taskId'];\r\n      if(id!=null){\r\n        this.taskId = parseInt(id);\r\n        this.isUpdate=true;\r\n        this._taskService.getTasks().subscribe((data:any)=>{\r\n          this.tasks=data;\r\n          this.newTask=this.tasks.find(x=>x.id==this.taskId)??new Task();\r\n        });\r\n        \r\n      }\r\n      \r\n    });\r\n  }\r\n\r\n  getProjects(){\r\n    this._projectService.getProjects().subscribe((data:any)=>{\r\n      this.projectDataList=data;\r\n    });\r\n  }\r\n\r\n  getTasks(){\r\n    this._taskService.getTasks().subscribe((data:any)=>{\r\n      this.tasks=data;\r\n    });\r\n  }\r\n\r\n  getUsers(){\r\n    this._userService.getUsers().subscribe((data:any)=>{\r\n      this.userDataList=data;\r\n      this.getTasks();\r\n  })\r\n  }\r\n\r\n  getStatusList(){\r\n    this._commonDataService.getStatuses().subscribe((data:any)=>{\r\n      this.statuses=data;\r\n      this.getUsers()\r\n  })\r\n  }\r\n  AddNewTask(task: Task) {\r\n    this._taskService.saveTask(task).subscribe((success)=>{\r\n      this.router.navigate(['home/task']);\r\n    })\r\n    \r\n  }\r\n  CancelAddTask() {\r\n    this.router.navigate(['home/task']);\r\n  }\r\n}\r\n","<form style=\"max-width: 70%; margin-left: 10%; margin-top: 1%\">\r\n    <h3>Add New Task</h3>\r\n    <div style=\"margin-bottom: 2%;\">\r\n        <div class=\"form-row\" style=\"display: flex;\">\r\n            <div style=\"margin-bottom: 2%;margin-right: 2%;\">\r\n                <label class=\"mr-sm-2\" for=\"inlineFormCustomSelect\">Project</label>\r\n                <select  [(ngModel)]=\"newTask.projectId\" name=\"ProjectId\" class=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                    <option selected>Choose...</option>\r\n                    <option *ngFor=\"let project of projectDataList\" [value]=\"project.id\" >{{ project.name }}</option>\r\n                </select>\r\n            </div>\r\n            <div style=\"margin-bottom: 2%;\">\r\n                <label class=\"mr-sm-2\" for=\"inlineFormCustomSelect\">Assigned To User</label>\r\n                <select  [(ngModel)]=\"newTask.assignedToUser\" name=\"AssignedToUser\" class=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                    <option selected>Choose...</option>\r\n                    <option *ngFor=\"let user of userDataList\" [value]=\"user.id\" >{{ user.firstName }}</option>\r\n\r\n                </select>\r\n            </div>\r\n\r\n            <div style=\"margin-bottom: 2%;\">\r\n                <label class=\"mr-sm-2\" for=\"inlineFormCustomSelect\">Status</label>\r\n                <select  [(ngModel)]=\"newTask.status\" name=\"Status\" class=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\">\r\n                    <option selected>Choose...</option>\r\n                    <option *ngFor=\"let st of statuses\" [value]=\"st.id\" >{{ st.status }}</option>\r\n\r\n                </select>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <label for=\"details\">Details</label>\r\n            <textarea class=\"form-control\" id=\"exampleFormControlTextarea1\" [(ngModel)]=\"newTask.detail\" name=\"Detail\"\r\n                #Detail=\"ngModel\" placeholder=\"Details about the task\" rows=\"3\"></textarea>\r\n        </div>\r\n    </div>\r\n    <button *ngIf=\"!isUpdate\" type=\"submit\" class=\"btn btn-primary\" (click)=\"AddNewTask(newTask)\">\r\n        Add Task\r\n    </button>\r\n    <button style=\"margin-left: 1%\" type=\"button\" (click)=\"CancelAddTask()\" class=\"btn btn-danger\">\r\n        Cancel\r\n    </button>\r\n    <button *ngIf=\"isUpdate\" style=\"margin-left: 1%\" type=\"button\" (click)=\"AddNewTask(newTask)\" class=\"btn btn-info\">\r\n        Save\r\n    </button>\r\n</form>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Project } from './project';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectService {\r\n  baseURL=\"http://localhost:3001/projects\"\r\n  constructor(private http:HttpClient) { }\r\n\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  } \r\n  \r\ngetProjects(){\r\n    return this.http.get(this.baseURL);\r\n  }\r\n\r\n\r\n\r\nsaveProject(project:any){\r\n  if(project.id){\r\n    return this.http.put<Project>(this.baseURL+'/'+project.id,project)\r\n  }\r\n  else{\r\n    return this.http.post<Project>(this.baseURL,project)\r\n  }          \r\n}\r\n\r\ndeleteProject(projectId:number){\r\n  let url=this.baseURL+\"/\"+projectId\r\nreturn this.http.delete(url, this.httpHeader);\r\n}\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { User } from '../user';\r\nimport { UserService } from '../user-service.service';\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css'],\r\n})\r\nexport class UserComponent implements OnInit {\r\n  constructor(private userSerive: UserService,private router: Router) {}\r\n\r\n  \r\n  showAddUser: boolean = false;\r\n  showUserList: boolean = true;\r\n  isUpdate: boolean = false;\r\n\r\n  users: Array<User> = [];\r\n  currentUser: User = {};\r\n  ngOnInit(): void {\r\n    this.getUsers();\r\n}\r\n\r\ngetUsers(){\r\n  this.userSerive.getUsers().subscribe((data:any)=>{\r\n    this.users=data;\r\n})\r\n}\r\n\r\n  OnAddUserClick() {\r\n    this.router.navigate(['home/AddUser'])\r\n  }\r\n\r\n\r\n  \r\n\r\n  ShowUserList(isSubmit: boolean) {\r\n    if (!isSubmit) {\r\n      this.showAddUser = false;\r\n      this.showUserList = true;\r\n    }\r\n  }\r\n\r\n  UpdateUser(user: User) {\r\n    this.router.navigate(['home/AddUser'],{ queryParams: { userId: user.id } })\r\n  }\r\n  DeleteUser(user: User) {\r\n    this.userSerive.deleteUser(user.id??0).subscribe((isSuccess)=>{\r\n      this.getUsers();\r\n    })\r\n  }\r\n}\r\n","<div *ngIf=\"showUserList\" >\r\n  <button type=\"button\" class=\"btn btn-outline-dark\" style=\"margin-top: 1%;margin-bottom: 1%;\"\r\n    (click)=\"OnAddUserClick()\">\r\n    Add User\r\n  </button>\r\n  <div style=\"overflow: scroll;max-height: 100vh\">\r\n  <table class=\"table\">\r\n      <thead class=\"thead-dark\">\r\n        <tr style=\"text-align: center\">\r\n          <th scope=\"col\">Id</th>\r\n          <th scope=\"col\">FirstName</th>\r\n          <th scope=\"col\">LastName</th>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr style=\"text-align: center;\" *ngFor=\"let user of users\">\r\n          <th scope=\"row\">{{ user.id }}</th>\r\n          <td>{{ user.firstName }}</td>\r\n          <td>{{ user.lastName }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td>\r\n            <button type=\"button\" (click)=\"UpdateUser(user)\" style=\"margin-left: 2%\" class=\"btn btn-info\">\r\n              Update\r\n            </button>\r\n            <button type=\"button\" (click)=\"DeleteUser(user)\" style=\"margin-left: 2%\" class=\"btn btn-danger\">\r\n              Delete\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n  </table>\r\n</div>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { CommonDataService } from \"src/app/common/common-data.service\";\r\nimport { Task } from \"../task\";\r\nimport { Router } from '@angular/router';\r\nimport { TaskService } from \"../task-service.service\";\r\nimport { UserService } from \"src/app/user/user-service.service\";\r\nimport { ProjectService } from \"src/app/project/project-service.service\";\r\n\r\n@Component({\r\n  selector: \"app-task\",\r\n  templateUrl: \"./task.component.html\",\r\n  styleUrls: [\"./task.component.css\"],\r\n})\r\nexport class TaskComponent implements OnInit {\r\n  constructor(private _commonDataService:CommonDataService,private _taskService:TaskService,private _userService:UserService,private _projectService:ProjectService, private router: Router) {\r\n  }\r\n\r\n  showAddTask: boolean = false;\r\n  showTaskList: boolean = true;\r\n  isUpdate: boolean = false;\r\n  projectsList: Array<any> = [];\r\n  usersList: Array<any> = [];\r\n  statuses:Array<any>=[]\r\n\r\n  tasks: Array<Task> = [];\r\n  currentTask: Task = {};\r\n  ngOnInit(): void {\r\n  //  this.getData();\r\n  this.getStatusList();\r\n  this.getUsers();\r\n  this.getProjects();\r\n  this.getTasks();\r\n  }\r\n  \r\n\r\n  getProjects(){\r\n    this._projectService.getProjects().subscribe((data:any)=>{\r\n      this.projectsList=data;\r\n    });\r\n  }\r\n\r\n  getTasks(){\r\n    this._taskService.getTasks().subscribe((data:any)=>{\r\n      this.tasks=data;\r\n    });\r\n  }\r\n\r\n  getUsers(){\r\n    this._userService.getUsers().subscribe((data:any)=>{\r\n      this.usersList=data;\r\n      this.getTasks();\r\n  })\r\n  }\r\n\r\n  getStatusList(){\r\n    this._commonDataService.getStatuses().subscribe((data:any)=>{\r\n      this.statuses=data;\r\n      this.getUsers()\r\n  })\r\n  }\r\n  OnAddTaskClick() {\r\n    this.router.navigate(['home/AddTask'])\r\n  }\r\n\r\n  getUser(userId:any){\r\n    return this.usersList.find(x=>x.id==userId).firstName;\r\n  }\r\n\r\n  getProject(projectId:any){\r\n    return this.projectsList.find(x=>x.id==projectId).name;\r\n  }\r\n\r\n  \r\n\r\n  getStatus(id:any){\r\n    return this.statuses.find(x=>x.id==id).status;\r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  ShowTaskList(isSubmit: boolean) {\r\n    if (!isSubmit) {\r\n      this.showAddTask = false;\r\n      this.showTaskList = true;\r\n    }\r\n  }\r\n\r\n  UpdateTask(task: Task) {\r\n    this.router.navigate(['home/AddTask'],{ queryParams: { taskId: task.id } })\r\n  }\r\n  DeleteTask(task: Task) {\r\n    this._taskService.deleteTask(task.id??-1).subscribe((success)=>{\r\n      this.getTasks();\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"showTaskList\">\r\n\r\n    <button type=\"button\" class=\"btn btn-outline-dark\" style=\"margin-top: 1%; margin-bottom: 1%\"\r\n        (click)=\"OnAddTaskClick()\">\r\n        Add Task\r\n    </button>\r\n    <div style=\"overflow: scroll; max-height: 100vh\">\r\n        <table class=\"table table-hover\">\r\n            <thead class=\"thead-dark\">\r\n                <tr style=\"text-align: center\">\r\n                    <th scope=\"col\">Id</th>\r\n                    <th scope=\"col\">Project</th>\r\n                    <th scope=\"col\">Details</th>\r\n                    <th scope=\"col\">AssignedToUser</th>\r\n                    <th scope=\"col\">Status</th>\r\n                    <th scope=\"col\">CreatedOn</th>\r\n                    <th scope=\"col\">Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr style=\"text-align: center\" *ngFor=\"let task of tasks\">\r\n                    <th scope=\"row\">{{ task.id }}</th>\r\n                    <td>{{ getProject(task.projectId)}}</td>\r\n                    <td>{{ task.detail }}</td>\r\n                    <td>{{ getUser(task.assignedToUser) }}</td>\r\n                    <td>{{ getStatus(task.status) }}</td>\r\n                    <td>{{ task.createdOn }}</td>\r\n                    <td>\r\n                        <button type=\"button\" (click)=\"UpdateTask(task)\" style=\"margin-left: 2%\"\r\n                            class=\"btn btn-info\">\r\n                            Update\r\n                        </button>\r\n                        <button type=\"button\" (click)=\"DeleteTask(task)\" style=\"margin-left: 2%\"\r\n                            class=\"btn btn-danger\">\r\n                            Delete\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from './user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\nbaseURL=\"http://localhost:3001/users\"\r\n  constructor(private http:HttpClient) { }\r\n\r\n  httpHeader = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  } \r\n  \r\ngetUsers(){\r\n    return this.http.get(this.baseURL);\r\n  }\r\n\r\n\r\n\r\nsaveUser(user:any){\r\n  if(user.id){\r\n    return this.http.put<User>(this.baseURL+'/'+user.id,user)\r\n  }\r\n  else{\r\n    return this.http.post<User>(this.baseURL,user)\r\n  }          \r\n}\r\n\r\ndeleteUser(userId:number){\r\n  let url=this.baseURL+\"/\"+userId\r\nreturn this.http.delete(url, this.httpHeader);\r\n}\r\n}\r\n\r\n  \r\n\r\n\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  myDate: Date = new Date();\r\n  router: string=\"\";\r\n  constructor(private _router: Router) {\r\n    this.router = _router.url; \r\n    \r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    console.log(this.router);\r\n    // this.clock();\r\n  }\r\n  clock() {\r\n    setInterval(() => {\r\n      this.myDate = new Date();\r\n    }, 1000);\r\n  }\r\n}\r\n","<div>\r\n  <nav class=\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">Project Manager</a>\r\n    <a class=\"navbar-brand\" style=\"margin-left:auto\" *ngIf=\"router != '/home'\" href=\"#\">Logout</a>\r\n    <!-- <app-header-home *ngIf=\"router != '/ur_route'\"></app-header-home> //component I want hidden unless url /home -->\r\n\r\n    <!-- <label for=\"clock\" id=\"clock\" style=\"margin-left: auto;color: aliceblue;\">{{myDate | date:'medium'}}</label> -->\r\n  </nav>\r\n</div>\r\n<div >\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { HttpClientModule } from '@angular/common/http'; \r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { NoopAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { UserModule } from \"./user/user.module\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { CommonModule, DatePipe } from \"@angular/common\";\r\nimport { ProjectModule } from \"./project/project.module\";\r\nimport { TaskModule } from \"./task/task.module\";\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { CommonDataService } from \"./common/common-data.service\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, LoginComponent, HomeComponent, NavbarComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    NoopAnimationsModule,\r\n    UserModule,\r\n    ProjectModule,\r\n    TaskModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [DatePipe,CommonDataService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Project } from \"../project/project\";\r\nimport { Task } from \"../task/task\";\r\nimport { User } from \"../user/user\";\r\n@Injectable()\r\nexport class CommonDataService {\r\n  baseUrl:string=\"http://localhost:3001/users?\"\r\n  SharingData: Subject<any> = new Subject<any>();\r\n  ProjectDataModule: Array<Project> = [];\r\n  UserDataModule: Array<User> = [];\r\n  TaskDataModule: Array<Task> = [];\r\n  Statuses:Array<any> = [];\r\n\r\n  constructor(private http:HttpClient) {\r\n    this.AddDummyUsers();\r\n    this.AddDummyProjects();\r\n    this.AddDummyTasks();\r\n    this.AddDummyStatus();\r\n  }\r\n\r\n  getStatuses(){\r\n    let url=\"http://localhost:3001/statuses\"\r\n    return this.http.get(url);\r\n  }\r\n  get getUsers(){\r\n    return this.UserDataModule;\r\n  }\r\nget getProjects(){\r\n  return this.ProjectDataModule\r\n}\r\nget getTasks(){\r\n  return this.TaskDataModule\r\n}\r\n\r\nget getStatus(){\r\n  return this.Statuses;\r\n}\r\n\r\nAddUser(user:User){\r\n  let userId=this.UserDataModule[this.UserDataModule.length-1].id;\r\n  user.id=userId==null?0:userId+1;\r\n  this.UserDataModule.push(user);\r\n}\r\n\r\nAuthenticateUser(userId:string){\r\n  let url=this.baseUrl+\"email=\"+userId;\r\n  return this.http.get(url);\r\n}\r\n\r\nUpdateUser(user:User){\r\n const userIndex=this.UserDataModule.findIndex(x=>x.id==user.id);\r\n this.UserDataModule[userIndex]=user;\r\n}\r\n\r\nDeleteUser(user:User){\r\n  const userIndex = this.UserDataModule.indexOf(user);\r\n  this.UserDataModule.splice(userIndex, 1);\r\n}\r\n\r\nAddProject(project:Project){\r\n  var today = new Date();\r\n    var dateTime = today.getUTCFullYear() + \"-\" + (today.getUTCMonth()+1) + \"-\"+ today.getUTCDay();\r\n  let projectId=this.ProjectDataModule[this.ProjectDataModule.length-1].id;\r\n  project.id=projectId==null?0:projectId+1;\r\n  project.createdOn=dateTime;\r\n  this.ProjectDataModule.push(project);\r\n}\r\n\r\nUpdateProject(project:Project){\r\n const projectIndex=this.ProjectDataModule.findIndex(x=>x.id==project.id);\r\n this.ProjectDataModule[projectIndex]=project;\r\n}\r\n\r\nDeleteProject(project:Project){\r\n  const projectIndex = this.ProjectDataModule.indexOf(project);\r\n  this.ProjectDataModule.splice(projectIndex, 1);\r\n}\r\n\r\nAddTask(task:Task){\r\n  var today = new Date();\r\n  var dateTime = today.getUTCFullYear() + \"-\" + (today.getUTCMonth()+1) + \"-\"+ today.getUTCDay();\r\n  let taskId=this.TaskDataModule[this.TaskDataModule.length-1].id;\r\n  task.id=taskId==null?0:taskId+1;\r\n  task.createdOn=dateTime;\r\n  this.TaskDataModule.push(task);\r\n}\r\n\r\nUpdateTask(task:Task){\r\n const taskIndex=this.TaskDataModule.findIndex(x=>x.id==task.id);\r\n this.TaskDataModule[taskIndex]=task;\r\n}\r\n\r\nDeleteTask(task:Task){\r\n  const taskIndex = this.TaskDataModule.indexOf(task);\r\n  this.TaskDataModule.splice(taskIndex, 1);\r\n}\r\n\r\n  AddDummyUsers() {\r\n    const newUser1: User = {\r\n        id: 101,\r\n        firstName: 'John',\r\n        lastName: 'wick ' ,\r\n        email: 'john@outlook.in',\r\n      }\r\n      const newUser2: User = {\r\n        id: 102,\r\n        firstName: 'will',\r\n        lastName: 'kass ',\r\n        email: 'will@outlook.in',\r\n      }\r\n      const newUser3: User = {\r\n        id: 103,\r\n        firstName: 'timothy',\r\n        lastName: 'v ',\r\n        email: 'kass@outlook.in',\r\n      }\r\n      const newUser4: User = {\r\n        id: 104,\r\n        firstName: 'andrew',\r\n        lastName: 'rit ',\r\n        email: 'andrew@outlook.in',\r\n      }\r\n      const newUser5: User = {\r\n        id: 105,\r\n        firstName: 'tim',\r\n        lastName: 'paine ',\r\n        email: 'tim@outlook.in',\r\n      }\r\n\r\n      this.UserDataModule.push(newUser1);\r\n      this.UserDataModule.push(newUser2);\r\n      this.UserDataModule.push(newUser3);\r\n      this.UserDataModule.push(newUser4);\r\n      this.UserDataModule.push(newUser5);\r\n    }\r\n\r\n  AddDummyProjects() {\r\n    var today = new Date();\r\n    var date =\r\n      today.getFullYear() +\r\n      \"-\" +\r\n      (today.getMonth() + 1) +\r\n      \"-\" +\r\n      today.getDate();\r\n    var time =\r\n      today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\r\n    var dateTime = date + \" \" + time;\r\n\r\n    const newProject1: Project = {\r\n      id: 1001,\r\n      name: \"Branch Visit Tool\",\r\n      detail: \"Branch Visting Tool for auditing\",\r\n      createdOn: dateTime,\r\n    }\r\n     this.ProjectDataModule.push(newProject1);\r\n     const newProject2: Project = {\r\n      id: 1002,\r\n      name: \"JTransfer\",\r\n      detail: \"Transfer request tool for transfer to jaipur\",\r\n      createdOn: dateTime,\r\n    }\r\n     this.ProjectDataModule.push(newProject2);\r\n\r\n     const newProject3: Project = {\r\n      id: 1003,\r\n      name: \"XL-Catlin\",\r\n      detail: \"Insurance Application for transaction\",\r\n      createdOn: dateTime,\r\n    }\r\n     this.ProjectDataModule.push(newProject3);\r\n     const newProject4: Project = {\r\n      id: 1004,\r\n      name: \"My Mobile Health\",\r\n      detail: \"Mobile patch update notification tool\",\r\n      createdOn: dateTime,\r\n    }\r\n     this.ProjectDataModule.push(newProject4);\r\n     const newProject5: Project = {\r\n      id: 1005,\r\n      name: \"Smarsh Manager\",\r\n      detail: \"Network Provider communication tool\",\r\n      createdOn: dateTime,\r\n    }\r\n     this.ProjectDataModule.push(newProject5);\r\n    \r\n  }\r\n\r\n  AddDummyTasks() {\r\n    var today = new Date();\r\n    var dateTime = today.getUTCFullYear() + \"-\" + (today.getUTCMonth()+1) + \"-\"+ today.getUTCDay();\r\n\r\n      const newTask1: Task = {\r\n        id: 1,\r\n        projectId: 1001,\r\n        detail: \"Branch manager should be alerted once visit is registered.\",\r\n        createdOn: dateTime,\r\n        status:1,\r\n        assignedToUser:102\r\n      };\r\n      this.TaskDataModule.push(newTask1);\r\n      const newTask2: Task = {\r\n        id: 2,\r\n        projectId: 1003,\r\n        detail: \"Jaipur Employee should not be able to apply request for transfer\",\r\n        createdOn: dateTime,\r\n        status:2,\r\n        assignedToUser:101\r\n      };\r\n      this.TaskDataModule.push(newTask2);\r\n      const newTask3: Task = {\r\n        id: 3,\r\n        projectId: 1005,\r\n        detail: \"It should show fraud calls made from different telecom providers \",\r\n        createdOn: dateTime,\r\n        status:3,\r\n        assignedToUser:105\r\n      };\r\n      this.TaskDataModule.push(newTask3);\r\n      const newTask4: Task = {\r\n        id: 4,\r\n        projectId: 1002,\r\n        detail: \"Add functionality to make payment throgh bitcoin \",\r\n        createdOn: dateTime,\r\n        status:4,\r\n        assignedToUser:103\r\n      };\r\n      this.TaskDataModule.push(newTask4);\r\n      const newTask5: Task = {\r\n        id: 5,\r\n        projectId: 1004,\r\n        detail: \"Upgrade to ios14.5 \",\r\n        createdOn: dateTime,\r\n        status:5,\r\n        assignedToUser:104\r\n      };\r\n      this.TaskDataModule.push(newTask5);\r\n    \r\n  }\r\n\r\n\r\n  AddDummyStatus(){\r\n    this.Statuses.push({id:1,status:\"Approved\"});\r\n    this.Statuses.push({id:2,status:\"Dev Implementation\"});\r\n    this.Statuses.push({id:3,status:\"Pending\"});\r\n    this.Statuses.push({id:4,status:\"Testing\"});\r\n    this.Statuses.push({id:5,status:\"In Business Specification\"});\r\n  }\r\n  \r\n}\r\n ","export class User {\r\n  id?: number;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  email?: string;\r\n  password?:string;\r\n}\r\n","export class Project {\r\n    id?: number;\r\n    name?: string;\r\n    detail?: string;\r\n    createdOn?: string;\r\n  }\r\n  ","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div style=\"width: 95%;background: #343b40;\" class=\"sidebar-navigation\">\r\n    <div class=\"nav flex-column navbar-dark bg-dark nav-pills\" id=\"v-pills-tab\" role=\"tablist\"\r\n        aria-orientation=\"vertical\">\r\n        <a class=\"nav-link\" id=\"v-pills-home-tab\" data-toggle=\"pill\" href=\"#v-pills-home\" role=\"tab\"\r\n            aria-controls=\"v-pills-home\" aria-selected=\"true\" routerLink=\"/home/user\" routerLinkActive=\"active\">Users</a>\r\n        <a class=\"nav-link\" id=\"v-pills-messages-tab\" data-toggle=\"pill\" href=\"#v-pills-messages\" role=\"tab\"\r\n            aria-controls=\"v-pills-messages\" aria-selected=\"false\" routerLink=\"/home/project\"\r\n            routerLinkActive=\"active\">Projects</a>\r\n        <a class=\"nav-link\" id=\"v-pills-settings-tab\" data-toggle=\"pill\" href=\"#v-pills-settings\" role=\"tab\"\r\n            aria-controls=\"v-pills-settings\" aria-selected=\"false\" routerLink=\"/home/task\"\r\n            routerLinkActive=\"active\">Tasks</a>\r\n    </div>\r\n</div>","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { AddProjectComponent } from \"./project/add-project/add-project.component\";\r\nimport { ProjectComponent } from \"./project/project/project.component\";\r\nimport { AddTaskComponent } from \"./task/add-task/add-task.component\";\r\nimport { TaskComponent } from \"./task/task/task.component\";\r\nimport { AddUserComponent } from \"./user/add-user/add-user.component\";\r\nimport { UserComponent } from \"./user/user/user.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: LoginComponent },\r\n  {\r\n    path: \"home\",\r\n    component: HomeComponent,\r\n    children: [\r\n      { path: \"project\", component: ProjectComponent },\r\n      { path: \"AddProject\", component: AddProjectComponent },\r\n      { path: \"task\", component: TaskComponent },\r\n      { path: \"AddTask\", component: AddTaskComponent },\r\n      { path: \"user\", component: UserComponent },\r\n      { path: \"AddUser\", component: AddUserComponent },\r\n    ],\r\n  },\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CommonDataService } from '../common/common-data.service';\r\nimport { User } from '../user/user';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  email:string=\"\";\r\n  password:string=\"\"\r\n  isError=false;\r\n  constructor(private route: ActivatedRoute,private router:Router,private _commonDataService: CommonDataService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n\r\n  HandleSubmit(e:any){\r\n    e.preventDefault();\r\n    this._commonDataService.AuthenticateUser(this.email).subscribe((user:any)=>{\r\n      if(user && user[0].Password==this.password){\r\n        this.router.navigate(['home/user'])\r\n      }\r\n      else{\r\n        this.isError=true;\r\n      }\r\n    },error=>{\r\n      this.isError=true;\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"card\">\r\n                <form (submit)=\"HandleSubmit($event)\" class=\"box\" style=\"background-color: black;width: 100%;\">\r\n                    <h1>Login</h1>\r\n                    <p class=\"text-muted\"> Please enter your login and password!</p> \r\n                    <p *ngIf=\"isError\" class=\"text-muted\"> UserName or Password is incorrect!</p> \r\n                    <input name=\"email\" [(ngModel)]=\"email\" type=\"text\" name=\"email\"\r\n                        placeholder=\"Username\"> <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" placeholder=\"Password\"> <a\r\n                        class=\"forgot text-muted\" href=\"#\">Forgot password?</a> <input type=\"submit\" name=\"submit\"\r\n                        value=\"Login\">\r\n                    <div class=\"col-md-12\">\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","export class Task {\r\n    id?: number;\r\n    projectId?: number;\r\n    detail?: string;\r\n    assignedToUser?: number;\r\n    status?: number;\r\n    createdOn?: string;\r\n  }\r\n  ","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}